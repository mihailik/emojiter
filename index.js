// @ts-check
// @

var emojiter = (function () {
  
  /**
   * Break the input text into individual graphemes,
   * where each grapheme will be a whole atomic character glyph
   * with any possible accents, skin tones, combining marks etc.
   * Whitespace or control characters are conidered each a separate grapheme too.
   * But CR+LF combination is considered a single grapheme.
   * @param {string} text
   * @param {string[]=} pushable An optional receptacle array (but can be any object with a push method) - when omitted, an empty array will be created and returned.  
   * @param {number=} textOffsetStart Character offset in input text to start, when omitted implied as zero.
   * @param {number=} textOffsetEnd Character offset in input text to end, when omitted means to iterate to the end of text.
   * @returns {string[]} Array of graphemes as individual strings. If pushable argument is provided, that same instance will be returned.
   */
  function emojiter(text, pushable, textOffsetStart, textOffsetEnd) {
    var result = pushable || [];
    if (typeof textOffsetStart !== 'number') textOffsetStart = 0;

    if (text) {
      for (var i = 0; i < text.length; i++) {
        var chCode = text.charCodeAt(i);
      }
    }

    if (!pushable) return result;
  }

  /**
   * Determine the break category of the character.
   * Aut-generated from https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt
   * @param {number} chCode 
   */
  function breakCategory(chCode) {

  }

  var breakRanges = {
  Prepend: [ // ARABIC NUMBER SIGN...MASARAM GONDI REPHA
    [1536,5],
    [216,0, 1,50],
    [467,0, 1,1132],
    [66415,0, 1,16],
    [245,1],
    [1916,0, 1,2],
    249,
    [74,5],
    701],
  CR: [13], // <control-000D>
  LF: [10], // <control-000A>
  Control: [ // <control-0000>...<reserved-E0FFF>
    [0,9],
    [2,1],
    [2,17],
    [96,32],
    [14,0, 1,1391],
    [4594,0, 1,2045],
    [3,1],
    [25,0, 1,1],
    [1,4, 1,50],
    1,
    [1,9],
    56976,
    [241,8],
    [1,2],
    [13365,8],
    [34920,3],
    [5328,7],
    [798342,0, 1,1],
    [1,29],
    [97,127],
    [241,3599]],
  Extend: [ // COMBINING GRAVE ACCENT...VARIATION SELECTOR-256
    [768,111],
    [276,4],
    [1,1],
    [264,44],
    2,
    [2,1, 1,2],
    2,
    [73,10],
    [49,20],
    17,
    [102,6],
    [3,5],
    [3,1],
    [2,3],
    36,
    [31,26],
    [92,10],
    [59,8],
    10,
    [25,3],
    [2,8],
    [2,2],
    [2,4],
    [44,2],
    [120,14],
    [2,31],
    [56,0, 1,2],
    [5,7],
    5,
    [4,6],
    [11,1],
    [30,0, 1,59],
    2,
    [3,3],
    [9,0, 1,10],
    [11,1],
    27,
    [3,1],
    58,
    [5,1, 1,5],
    [3,2],
    4,
    [31,1],
    4,
    [12,1],
    58,
    [5,4],
    [2,1],
    5,
    [21,1],
    [23,5],
    [2,0, 1,59],
    [2,0, 1,1],
    [2,3],
    9,
    [8,1],
    1,
    [11,1],
    [31,0, 1,60],
    [2,0, 1,13],
    [10,0, 1,41],
    4,
    [58,2, 1,6],
    [2,3],
    [8,1, 1,12],
    [30,0, 1,59],
    [3,0, 1,3],
    4,
    [6,1, 1,8],
    [12,1, 1,29],
    [58,1],
    2,
    [3,3],
    [9,0, 1,10],
    [11,1],
    [30,0, 1,73],
    5,
    [3,2],
    [2,0, 1,9],
    82,
    [3,6],
    [13,7],
    99,
    [3,8],
    [12,5],
    [75,1],
    [28,0, 2,2],
    [56,13],
    [2,4],
    [2,1],
    [6,10],
    [2,35],
    10,
    [103,3],
    [2,5],
    [2,1, 1,3],
    [26,1],
    [5,2],
    [17,3],
    14,
    [3,1],
    [7,0, 1,16],
    [704,2, 1,947],
    [30,2],
    [30,1, 1,31],
    [65,1],
    [2,6],
    9,
    [3,10],
    10,
    [46,2],
    [120,1],
    35,
    [119,2],
    [5,1],
    10,
    [7,2],
    [220,1],
    [3,0, 1,59],
    [2,6],
    [2,0, 1,2],
    [3,7],
    [7,9],
    3,
    [49,13],
    1,
    [1,1],
    [64,3],
    [49,0, 1,1],
    [1,4],
    [2,0, 1,6],
    [41,8],
    [13,1],
    [33,3],
    [3,1],
    [2,2],
    57,
    [2,1],
    4,
    [2,2],
    [59,7],
    [3,1],
    [153,2],
    [2,12],
    [2,6],
    [5,0, 1,7],
    [4,1],
    [199,57],
    [2,4],
    525,
    [196,12],
    [1,3],
    1,
    [1,2],
    [1,11],
    [3071,2],
    142,
    [97,31],
    [555,3],
    [1,1, 1,106],
    30165,
    [1,2],
    [2,9],
    [33,1, 1,81],
    [273,0, 1,4],
    5,
    [26,1],
    6,
    [152,1],
    [27,17],
    14,
    [39,7],
    [26,10],
    [47,2],
    49,
    [3,3],
    [3,1],
    40,
    [68,5],
    [3,1, 1,3],
    [13,0, 1,9],
    [48,0, 1,52],
    [2,2],
    [3,1, 1,6],
    2,
    [43,1],
    [9,0, 1,239],
    [3,0, 1,5],
    20273,
    [738,15, 1,17],
    [367,1],
    [606,0, 1,227],
    [150,4],
    [1671,2],
    [2,1],
    [6,3],
    [41,2],
    5,
    [166,1],
    [574,3],
    [388,1],
    [154,10],
    177,
    [55,14],
    [57,2],
    [50,3],
    [3,1],
    [70,2],
    [37,4],
    [2,7],
    63,
    [13,1],
    [53,8],
    [11,3],
    3,
    [96,2],
    3,
    [2,1],
    [7,0, 1,161],
    [4,7],
    [22,1, 1,58],
    [2,0, 1,2],
    23,
    [15,6],
    [4,4],
    [196,7],
    [3,2],
    [2,0, 1,24],
    82,
    [3,5],
    [2,0, 1,3],
    [2,1, 1,2],
    236,
    [3,3],
    [7,1, 1,2],
    [28,1],
    [86,7],
    3,
    [2,1],
    [107,0, 1,2],
    [3,5],
    2,
    [102,2],
    [3,3],
    [2,4],
    [260,8],
    [2,1],
    246,
    [11,1],
    [2,0, 1,5],
    [145,3],
    [3,1],
    5,
    [33,9],
    [41,5],
    [3,3],
    9,
    [10,5],
    [3,2],
    [47,12],
    [2,1],
    [407,6],
    [2,5],
    2,
    [83,21],
    [3,6],
    [2,1, 1,2],
    [123,5],
    4,
    [2,1],
    [2,6],
    2,
    [73,1],
    [4,0, 1,2],
    [348,1],
    [19452,4],
    [60,6],
    1049,
    [64,3],
    82,
    [19641,1],
    5319,
    [2,2],
    [5,4],
    [9,7],
    [3,6],
    [31,3],
    [149,2],
    [1980,54],
    [5,49],
    [9,0, 1,15],
    [23,4],
    [2,14],
    [1361,6],
    [2,16],
    [3,6],
    [2,1],
    [2,4],
    [262,6],
    [438,3],
    [1505,6, 1,110],
    [2737,4],
    [789537,95],
    [129,239]],
  Regional: [[127462,25]], // undefined
  SpacingMark: [ // DEVANAGARI SIGN VISARGA...MUSICAL SYMBOL COMBINING AUGMENTATION DOT
    [2307,0, 1,56],
    [3,2],
    [9,3],
    [2,1, 1,51],
    [60,1, 1,7],
    [3,1],
    55,
    [59,2],
    67,
    [59,2],
    9,
    [2,1, 1,54],
    61,
    [7,1, 1,3],
    115,
    [2,1],
    [4,2, 1,2],
    [53,2],
    [62,3],
    [62,1],
    59,
    [2,1, 1,2],
    [3,1, 1,2],
    [55,1, 1,60],
    [6,2, 1,2],
    [54,1, 1,77],
    [7,6],
    [20,1],
    [64,0, 1,128],
    [139,1],
    [64,0, 1,178],
    [10,1, 1,26],
    [45,0, 1,1842],
    [8,7],
    [2,1],
    [347,3],
    [3,2],
    [5,1],
    [2,5],
    [225,1],
    [59,0, 1,2],
    [22,5],
    [146,0, 1,55],
    [2,4],
    [2,1],
    [62,0, 1,31],
    [5,1],
    [3,0, 1,61],
    [3,2],
    2,
    [4,1],
    [49,7],
    [9,1],
    [172,0, 1,22],
    [35628,1],
    3,
    [89,1],
    [51,15],
    [143,1],
    48,
    [49,1, 1,5],
    [3,2],
    [111,1, 1,3],
    [25,0, 1,158],
    [3,1],
    6,
    [238,1, 2,2],
    [2,0, 1,25620],
    [2,0, 1,128],
    [46,2],
    [5,1],
    116,
    [25,1],
    60,
    [49,2],
    [10,1],
    14,
    [94,2],
    [4,1],
    2,
    [171,2],
    [32,1],
    60,
    [2,3],
    [3,1],
    [3,2],
    [21,1],
    [210,2],
    [9,1],
    4,
    [108,1],
    7,
    [2,1],
    [2,0, 1,3],
    [239,1],
    [7,3],
    3,
    [114,2],
    [9,1],
    [2,0, 1,110],
    [2,1],
    7,
    [106,1],
    5,
    [262,2],
    10,
    [249,4],
    [2,1],
    [5,0, 1,3],
    2,
    [143,2],
    [9,3],
    [5,0, 1,85],
    [30,1],
    [63,0, 1,408],
    [15,0, 1,107],
    [8,0, 1,3],
    [214,4],
    [5,1],
    2,
    [351,1],
    [20571,54],
    [105,1],
    [24949,0, 1,7]],
  L: [ // HANGUL CHOSEONG KIYEOK...HANGUL CHOSEONG SSANGYEORINHIEUH
    [4352,95],
    [38913,28]],
  V: [ // HANGUL JUNGSEONG FILLER...HANGUL JUNGSEONG ARAEA-E
    [4448,71],
    [50697,22]],
  T: [ // HANGUL JONGSEONG KIYEOK...HANGUL JONGSEONG PHIEUPH-THIEUTH
    [4520,87],
    [50636,48]],
  LV: [[44032,0, 398,28]], // HANGUL SYLLABLE GA...HANGUL SYLLABLE HI
  LVT: [[44033,26, 398,2]], // HANGUL SYLLABLE GAG...HANGUL SYLLABLE HIH
  ZWJ: [8205] // ZERO WIDTH JOINER
};

  /**
   * Unicode point, taking account of pair surrogates.
   * @param {string} text
   * @param {number} offset
   */
  function codePointAt(text, offset) {
    var chCode = text.charCodeAt(offset);

    if (chCode >= 0xD800 && offset < text.length - 1) {
      var chCodeNext = text.charCodeAt(offset + 1);
      if (chCode < 0xDC00) return 0x10000 | ((chCode - 0xD800) << 10) | (chCodeNext - 0xDC00); // high surrogate
      else if (chCode <= 0xDBFF) return 0x10000 | ((chCodeNext - 0xD800) << 10) | (chCode - 0xDC00) // low surrogate, swap
    }

    return chCode;
  }

  if (typeof module !== 'undefined' && module) {
    if ((require.main || process.mainModule) === /** @type {*} */(module)) {
      console.log('This file is not meant to run as a command line script (yet).')
    }
    else {
      module.exports = emojiter;
    }
  }
  else if (typeof WScript !== 'undefined' && WScript) {
    // TODO: read from input and print out in neat way, for testing
    WScript.Echo('This file is not meant to run in Windows Script Host (yet).');
  }
  else {
    emojiter.breakCategory = breakCategory;
    emojiter.codePointAt = codePointAt;
    emojiter.emojiter = emojiter;
    return emojiter;
  }

})();